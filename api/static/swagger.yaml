openapi: 3.0.0
info:
  title: Flask API
  description: API for authentication including registration, login, and protected routes.
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: Local server
  - url: https://flask-api-production-6584.up.railway.app
    description: Production server
paths:
  /:
    get:
      summary: Home
      description: Returns a simple greeting message
      responses:
        "200":
          description: Greeting message
          content:
            text/html:
              schema:
                type: string
  /login:
    post:
      tags:
        - users
      summary: User login
      description: Logs in a user and returns a JWT token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username of the user
                password:
                  type: string
                  description: The password of the user
              required:
                - username
                - password
      responses:
        "201":
          description: JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token
                  decode:
                    type: object
                    description: Decoded JWT token
        "400":
          description: Invalid login credentials
  /register:
    post:
      tags:
        - users
      summary: User registration
      description: Registers a new user
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email address of the user
                username:
                  type: string
                  description: The username of the user
                password:
                  type: string
                  description: The password of the user
              required:
                - email
                - username
                - password
      responses:
        "200":
          description: User registered successfully
        "400":
          description: Validation errors
        "500":
          description: Internal server error
  /protected:
    get:
      tags:
        - users
      summary: Protected route
      description: Returns a message for verified users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Greeting message for verified users
          content:
            text/html:
              schema:
                type: string
        "401":
          description: Unauthorized access
  /users:
    get:
      tags:
        - users
      summary: Get all users
      description: Returns a list of all users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        username:
                          type: string
                        email:
                          type: string
        "401":
          description: Unauthorized access
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
